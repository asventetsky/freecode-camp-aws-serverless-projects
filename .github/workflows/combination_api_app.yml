name: Deploy Combination API app

on:
  workflow_dispatch:

jobs:
  lint:
    name: Code standards
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: "☁️ checkout repository"
        uses: actions/checkout@v3

      - name: "🔧 install python 3.9"
        uses: actions/setup-python@v4
        with:
            python-version: '3.9'

      - name: "🔧 install pylint"
        run: pip install pylint

      - name: "📦 install dependencies"
        run: cd combination-api-app/source && pip install -r requirements.txt

      - name: "🔍 lint code"
        run: cd combination-api-app/source && find . -type f -name "*.py" | xargs pylint

  test:
    name: Test application
    needs: lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: "☁️ checkout repository"
        uses: actions/checkout@v3

      - name: "🔧 install python 3.9"
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: "📦 install dependencies"
        run: cd combination-api-app/source && pip install -r requirements.txt

      - name: "🔍 run tests"
        run: cd combination-api-app/source && python3 -m unittest tests.test_api_composer

  build:
    name: Build application
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: "☁️ checkout repository"
        uses: actions/checkout@v3

      - name: "🔧 install python 3.9"
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: "📦 install dependencies"
        run: cd combination-api-app/source && pip install -r requirements.txt

      - name: "🔧 construct lambda artifact name"
        id: construct-lambda-artifact-name
        run: |
            GITHUB_BUILD_NUMBER=${{github.run_number}}
            LAMBDA_ARTIFACT_NAME=lambda-api-combiner-${GITHUB_BUILD_NUMBER}.zip
            echo "name=${LAMBDA_ARTIFACT_NAME}" >> $GITHUB_OUTPUT

      - name: "🔍 run build"
        run: |
            chmod +x .github/workflows/scripts/combination-api-app/build.sh && \
            .github/workflows/scripts/combination-api-app/build.sh ${{ steps.construct-lambda-artifact-name.outputs.name }}

      - name: "💾 save lambda artifact"
        uses: actions/cache@v3
        with:
          key: lambda-api-combiner
          path: ./combination-api-app/source/target/${{ steps.construct-lambda-artifact-name.outputs.name }}

    outputs:
      LAMBDA_ARTIFACT_NAME: ${{ steps.construct-lambda-artifact-name.outputs.name }}

  deploy-dev:
    name: Deploy application to DEV
    environment: dev
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.COMBINATION_API_APP_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.COMBINATION_API_APP_AWS_SECRET_ACCESS_KEY }}
      LAMBDA_ARTIFACT_NAME: ${{ needs.build.outputs.LAMBDA_ARTIFACT_NAME }}
    steps:

      - name: "☁️ checkout repository"
        uses: actions/checkout@v3

      - name: "💾 fetch lambda artifact"
        uses: actions/cache@v3
        with:
          key: lambda-api-combiner
          path: ./combination-api-app/source/target/${LAMBDA_ARTIFACT_NAME}

      - name: "check artifact preserved"
        run: ls -l ./combination-api-app/source/target/${LAMBDA_ARTIFACT_NAME}

      - name: "🔧 install terraform 1.3.8"
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.8

      - name: "🔧 install terragrunt 0.43.2"
        run: chmod +x .github/workflows/scripts/combination-api-app/terragrunt_install.sh && .github/workflows/scripts/combination-api-app/terragrunt_install.sh

      - name: "📦 prepare common_vars file for terragrunt"
        run: |
            echo "lambda_artifact_name=${LAMBDA_ARTIFACT_NAME}"
            echo "lambda_artifact_name=${LAMBDA_ARTIFACT_NAME}" >> combination-api-app/infrastructure/environments/common_vars.yaml

      - name: "🔍 run terragrunt init and terragrunt apply"
        run: cd combination-api-app/infrastructure/environments/dev && terragrunt init && terragrunt apply -auto-approve
